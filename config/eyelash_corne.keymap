#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "keys_sv.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        volknob: volume_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_VOLUME_KNOB";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <45 46 47 36 37 8 9 10 11 12 23 24 25 26 27 37 38 39 40 41 7 22>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 34 42 43 44>;
        };

        hue_encoder: hue_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;

            label = "HUE_ENCODER";
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC  &kp SV_Q            &kp SV_W                &kp SV_E              &kp SV_R            &kp SV_T                             &kp UP                &kp SV_Y   &kp SV_U             &kp SV_I               &kp SV_O                 &kp SV_P                  &kp BSPC
&kp TAB  &hml LEFT_ALT SV_A  &hml LEFT_CONTROL SV_S  &hml LEFT_SHIFT SV_D  &hml LEFT_GUI SV_F  &kp SV_G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp SV_H   &hmr RIGHT_GUI SV_J  &hmr RIGHT_SHIFT SV_K  &hmr RIGHT_CONTROL SV_L  &hmr RIGHT_ALT SV_A_RING  &kp SV_APOSTROPHE
&none    &kp SV_Z            &kp SV_X                &kp SV_C              &kp SV_V            &kp SV_B     &kp C_MUTE              &kp DOWN              &kp SV_N   &kp SV_M             &kp SV_COMMA           &kp SV_DOT               &kp SV_O_UMLAUT           &kp SV_A_UMLAUT
                                                     &mo 3                 &mo 2               &lt 1 SPACE                                                &kp ENTER  &lt 2 BSPC           &none
            >;

            sensor-bindings = <&volknob>;
        };

        Number_layer {
            display-name = "NUMBER";
            bindings = <
&none  &none  &none  &kp N1  &kp N2  &kp N3                           &mmv MOVE_UP                     &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END            &none     &kp BSPC
&none  &none  &none  &kp N4  &kp N5  &kp N6           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT          &none     &none
&none  &none  &none  &kp N7  &kp N8  &kp N9  &none                    &mmv MOVE_DOWN                   &none     &kp RIGHT_GUI  &kp RSHFT    &kp RIGHT_CONTROL  &kp RALT  &none
                     &trans  &kp N0  &trans                                                            &trans    &trans         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&none  &none  &none  &none   &none   &none                            &mmv MOVE_UP                     &kp SV_LEFT_BRACE  &kp SV_RIGHT_BRACE  &kp SV_LEFT_BRACKET  &kp SV_RIGHT_BRACKET  &kp SV_QUESTION  &kp BSPC
&none  &none  &none  &none   &none   &none            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp SV_PLUS        &kp SV_EQUAL        &kp SV_LESS_THAN     &kp SV_GREATER_THAN   &kp SV_BSLH      &kp SV_GRAVE
&none  &none  &none  &none   &none   &none   &none                    &mmv MOVE_DOWN                   &kp SV_MINUS       &kp SV_UNDERSCORE   &kp SV_TILDE         &kp CARET             &kp SV_PIPE      &kp SV_ACUTE
                     &trans  &trans  &trans                                                            &trans             &trans              &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        FUNCTIONS {
            display-name = "Fn";
            bindings = <
&none  &none  &none  &none   &none   &none                            &mmv MOVE_UP                     &kp F1  &kp F2   &kp F3   &kp F4   &none  &none
&none  &none  &none  &none   &none   &none            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp F5  &kp F6   &kp F7   &kp F8   &none  &none
&none  &none  &none  &none   &none   &none   &none                    &mmv MOVE_DOWN                   &kp F9  &kp F10  &kp F11  &kp F12  &none  &none
                     &trans  &trans  &trans                                                            &trans  &trans   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Meta {
            bindings = <
&bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2                     &bt BT_SEL 3                    &bt BT_SEL 4  &bt BT_CLR                    &none         &none   &none   &none   &none  &none  &none
&none            &none            &none                            &none                           &none         &none                  &none  &none  &none  &none   &none   &none   &none  &none  &none
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(0,0,100)  &none         &out OUT_TOG  &none           &none         &none   &none   &none   &none  &none  &none
                                                                   &trans                          &trans        &trans                                      &trans  &trans  &trans
            >;

            sensor-bindings = <&hue_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        META-LAYER {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};

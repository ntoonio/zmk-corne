#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "keys_sv.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC  &kp SV_Q  &kp SV_W  &kp SV_E  &kp SV_R  &kp SV_T                        &kp UP                &kp SV_Y   &kp SV_U    &kp SV_I      &kp SV_O    &kp SV_P         &kp BSPC
&none    &kp SV_A  &kp SV_S  &kp SV_D  &kp SV_F  &kp SV_G              &kp LEFT  &kp ENTER  &kp RIGHT  &kp SV_H   &kp SV_J    &kp SV_K      &kp SV_L    &kp SV_A_RING    &kp SV_APOS
&none    &kp SV_Z  &kp SV_X  &kp SV_C  &kp SV_V  &kp SV_B     &none              &kp DOWN              &kp SV_N   &kp SV_M    &kp SV_COMMA  &kp SV_DOT  &kp SV_O_UMLAUT  &kp SV_A_UMLAUT
                             &none     &mo 2     &lt 1 SPACE                                           &kp ENTER  &lt 2 BSPC  &mo 3
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Number_layer {
            display-name = "NUMBER";
            bindings = <
&none  &kp SV_N1  &kp SV_N2  &kp SV_N3       &kp SV_N4  &kp SV_N5                           &mmv MOVE_UP                     &kp SV_N6  &kp SV_N7  &kp SV_N8  &kp SV_N9  &kp SV_N0  &kp BSPC
&none  &none      &none      &none           &none      &none               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp HOME   &kp PG_UP
&none  &none      &none      &none           &none      &none      &none                    &mmv MOVE_DOWN                   &none      &none      &none      &none      &kp END    &kp PG_DN
                             &kp LEFT_SHIFT  &trans     &trans                                                               &trans     &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&none  &kp SV_EXCL  &kp SV_DOUBLE_QUOTES  &kp SV_HASH  &kp SV_EURO  &kp SV_PRCNT                           &mmv MOVE_UP                     &kp SV_AMPS   &kp SV_SLASH  &kp SV_LPAR  &kp SV_RPAR  &kp SV_RPAR  &kp BSPC
&none  &none        &none                 &none        &none        &none                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp SV_MINUS  &kp SV_EQUAL  &kp SV_LBRC  &kp SV_RBRC  &kp SV_BSLH  &kp SV_GRAVE
&none  &none        &none                 &none        &none        &none         &none                    &mmv MOVE_DOWN                   &kp SV_UNDER  &kp SV_PLUS   &kp SV_LBKT  &kp SV_RBKT  &kp SV_PIPE  &kp SV_TILDE
                                          &trans       &trans       &trans                                                                  &trans        &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                           &mmv MOVE_UP                     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none   &none   &none   &none   &none   &none            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none   &none   &none   &none    &none    &none
&none   &none   &none   &none   &none   &none   &none                    &mmv MOVE_DOWN                   &none   &none   &none   &none    &none    &none
                        &trans  &trans  &trans                                                            &trans  &trans  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Meta {
            bindings = <
&bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2                     &bt BT_SEL 3  &bt BT_SEL 4     &bt BT_CLR                      &none         &none   &none   &none   &none  &none  &none
&none            &none            &none                            &none         &none            &none                    &none  &none  &none  &none   &none   &none   &none  &none  &none
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_COLOR_HSB(0,100,50)  &none         &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &none           &none         &none   &none   &none   &none  &none  &none
                                                                   &trans        &trans           &trans                                        &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        META-LAYER {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};

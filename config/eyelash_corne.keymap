#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "keys_sv.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        COMBO_TAB {
            timeout-ms = <50>;
            bindings = <&kp TAB>;
            key-positions = <1 2>;
            layers = <0>;
        };

        COMBO_L_SHIFT {
            timeout-ms = <50>;
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <16 15>;
        };

        COMBO_L_GUI {
            timeout-ms = <50>;
            bindings = <&kp LEFT_GUI>;
            key-positions = <17 18>;
        };

        COMBO_L_ALT {
            timeout-ms = <50>;
            bindings = <&kp LEFT_ALT>;
            key-positions = <33 32>;
        };

        COMBO_R_SHIFT {
            timeout-ms = <50>;
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <24 25>;
        };

        COMBO_R_GUI {
            timeout-ms = <50>;
            bindings = <&kp LEFT_GUI>;
            key-positions = <22 23>;
        };

        COMBO_R_ALT {
            timeout-ms = <50>;
            bindings = <&kp LEFT_ALT>;
            key-positions = <36 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC  &kp Q  &kp W  &kp E  &kp R  &kp T                           &kp UP                &kp Y      &kp U  &kp I      &kp O    &kp P            &kp BSPC
&none    &kp A  &kp S  &kp D  &kp F  &kp G                 &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J  &kp K      &kp L    &kp APOS         &kp SV_A_RING
&none    &kp Z  &kp X  &kp C  &kp V  &kp B        &none              &kp DOWN              &kp N      &kp M  &kp COMMA  &kp DOT  &kp SV_O_UMLAUT  &kp SV_A_UMLAUT
                       &none  &mo 1  &lt 3 SPACE                                           &kp ENTER  &mo 2  &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Number_layer {
            display-name = "NUMBER";
            bindings = <
&none  &kp N1  &kp N2  &kp N3          &kp N4  &kp N5                           &mmv MOVE_UP                     &kp N6    &kp N7    &kp N8  &kp N9     &kp N0    &kp BSPC
&none  &none   &none   &none           &none   &none            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp HOME  &kp PG_UP
&none  &none   &none   &none           &none   &none   &none                    &mmv MOVE_DOWN                   &none     &none     &none   &none      &kp END   &kp PG_DN
                       &kp LEFT_SHIFT  &none   &none                                                             &none     &none     &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&none  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT                           &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&none  &none     &none   &none     &none     &none               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBRC   &kp RBRC  &kp BSLH  &kp GRAVE
&none  &none     &none   &none     &none     &none      &none                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBKT   &kp RBKT  &kp PIPE  &kp TILDE
                         &none     &none     &none                                                                &none      &none      &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6                           &mmv MOVE_UP                     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none   &none   &none   &none   &none   &none            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none   &none   &none   &none    &none    &none
&none   &none   &none   &none   &none   &none   &none                    &mmv MOVE_DOWN                   &none   &none   &none   &none    &none    &none
                        &none   &none   &none                                                             &none   &none   &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Meta {
            bindings = <
&bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2                     &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR                  &none         &none  &none  &none  &none  &none  &none
&none            &none            &none                            &none         &none         &none                &none  &none  &none  &none  &none  &none  &none  &none  &none
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_COLOR_HSB(0,100,50)  &none         &none         &none       &none           &none         &none  &none  &none  &none  &none  &none
                                                                   &none         &none         &none                                     &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        META-LAYER {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
